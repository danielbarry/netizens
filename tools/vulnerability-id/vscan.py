#!/usr/bin/pythonw

#=================================================================
#title          :vscan.py
#description    :scan for common vulnerabilities
#author:        :someone (I cannot remember)
#timestamp      :201512091750Z
#version        :0.0.3
#usage          :python vscan.py <vulnerability file> <target IP>
#notes          :uses vuln_banner.txt as 'dictionary'
#		 checking for vulnerable services on 
#		 ports: 21, 22, 25, 80, 110, 443
#=================================================================

import socket, sys, os
def retBanner(target, port):
	try:
		socket.setdefaulttimeout(2)
		s = socket.socket()
		s.connect((target, port))
		banner = s.recv(1024)
		return banner
	except:
		return

def checkVulns(banner, filename):
	f = open(filename,'r')
	for line in f.readlines():
		if line.strip('\n') in banner:
			print "[+] Server is vulnerable: " + banner.strip('\n')

def main():
	if len(sys.argv)==3:
		filename = sys.argv[1]
		target = sys.argv[2]
		if not os.path.isfile(filename):
			print '[-] ' + filename + ' does not exist.'
			exit(0)
		if not os.access(filename, os.R_OK):
			print '[-] ' + filename + ' acess denied.'
			exit(0)
		if not os.system("ping -c 1 " + target + " > /dev/null 2>&1"):
			print '[-] Invalid IP address or host is down.'
			exit(0)
	else:
		print '[-] Usage: ' + str(sys.argv[0]) + ' <vuln filename>' + ' <target IP>'
		exit(0)

	PortList = [21, 22, 25, 80, 110, 443]
	for port in PortList:
		banner = retBanner(target, port)
		if banner:
			print '[+] ' + target + ': ' + banner
			checkVulns(banner, filename)
		else:
			print '[+] ' + target + str(port) + ':predefined vulnerabilities not found.'

if __name__ == '__main__':
	main()
